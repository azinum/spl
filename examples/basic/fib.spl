// fib.spl

fn fib(n: u64) -> u64 {
  let a = 0;
  let b = 1;
  let c = 0;
  let i = 1;
  if eq n 0 {
    store64 @b 0;
  }
  else {
    while < i n {
      store64 @c + a b;
      store64 @a b;
      store64 @b c;
      store64 @i +1 i;
    }
  }
  b;
}

fn fib_recursive(n: u64) -> u64 {
  let result = 0;
  if < n 2 {
    store64 @result n;
  }
  else {
    store64 @result + fib_recursive(- n 1) fib_recursive(- n 2);
  }
  result;
}

fn main -> none {
  let n: u64 = 12;
  print fib_recursive(n);
  print fib(n);
}
