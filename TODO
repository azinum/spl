- optimize ir code generator so that it does not emit redundant instructions e.g. from constant expressions
- dependency trace (i.e. trace which things depend on which other things)
- improve memory allocator
- differentiate between signed and unsigned comparison operators for where it is nessesary (e.g. cmovl vs. cmovb for signed and unsigned values respectively)
- add ability to use escaped and unescaped `raw` strings
- typed assignment operator
- struct padding and alignment (user should be able to opt-out of struct padding/alignment, as well as being able to specify padding and alignment sizes)
- improve struct field access
- do more work on type casting
- signed integers
- function inlining
- compile time evaluation of `trival` functions
- fix parsing bug where `;` is not detected after binary operation
- fix parsing bug where single `}` are not detected
- basic introspection
- library linking
