// main.spl

// include "lib/common.spl"

// fn print_bits(fd: u64, byte: u64) -> none {
//   let mask = 0b1000_0000;
//   let i = 0;
//   const count = 8;
//   while < i count {
//     let value = neq 0 and byte mask;
//     dprintf(fd, "%d", @value);
//     store64 at mask rshift mask 1;
//     store64 at i + 1 i;
//   }
// }

struct T (
  a: u64,
  b: cstr
);

fn thing(t: ptr<T>) -> none {
  print t;
}


fn main -> none {
  let t: T = 0;
  thing(at t);
}
