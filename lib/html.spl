// html.spl

fn html_begin_html(fd: u64, title: cstr, content_format: cstr, args: any) -> none {
  let start =
"<!DOCTYPE html>
 <html>
 <head>
 <meta charset='utf-8'>
 <meta name='viewport' content='width=device-width,initial-scale=1.0'>
 <title>%s</title>
";
  let end =
"</head>
 <body>";
  dprintf(fd, start, @title);
  dprintf(fd, content_format, args);
  dprintf(fd, "%s\n", @end);
}

fn html_tag(fd: u64, tag: cstr, content_format: cstr, args: any) -> none {
  dprintf(fd, "<%s>", @tag);
  dprintf(fd, content_format, args);
  dprintf(fd, "</%s>\n", @tag);
}

fn html_single_tag(fd: u64, tag: cstr) -> none {
  dprintf(fd, "<%s>\n", @tag);
}

fn html_single_tag_with_attr(fd: u64, tag: cstr, attr_format: cstr, args: any) -> none {
  dprintf(fd, "<%s ", @tag);
  dprintf(fd, attr_format, args);
  dprintf(fd, ">\n", null);
}

fn html_single_end_tag(fd: u64, tag: cstr) -> none {
  dprintf(fd, "</%s>\n", @tag);
}

fn html_tag_with_attr(fd: u64, tag: cstr, attr_format: cstr, attr_args: any, content_format: cstr, content_args: any) -> none {
  html_single_tag_with_attr(fd, tag, attr_format, attr_args);
  dprintf(fd, content_format, content_args);
  html_single_end_tag(fd, tag);
}

fn html_end_html(fd: u64) -> none {
  let content =
"</body>
 </html>";
  dprintf(fd, "%s\n", @content);
}
